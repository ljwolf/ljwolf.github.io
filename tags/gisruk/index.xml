<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gisruk on Yet Another Geographer</title>
    <link>/tags/gisruk/</link>
    <description>Recent content in Gisruk on Yet Another Geographer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 18 Apr 2018 01:46:46 +0100</lastBuildDate>
    
	<atom:link href="/tags/gisruk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GISRUK I: CDRC Brexit Analysis Competition</title>
      <link>/cdrc-brexit/</link>
      <pubDate>Wed, 18 Apr 2018 01:46:46 +0100</pubDate>
      
      <guid>/cdrc-brexit/</guid>
      <description>My entry in the Consumer Data Research Center&amp;rsquo;s Brexit Data Competition is called &amp;ldquo;Tension Points: A Theory &amp;amp; Evidence&amp;rdquo;, which I talked about at the 2018 GISRUK conference
There is an abstract describing some of the work that I submitted to get to the final round, but if you&amp;rsquo;re computationally inclined, you&amp;rsquo;ll find everything sufficient to replicate my modelling &amp;amp; analysis in this Jupyter Notebook (raw). You&amp;rsquo;ll need scikit-learn, pystan, statsmodels, and geopandas at minimum to run.</description>
    </item>
    
    <item>
      <title>GISRUK II: 2018 Spatially-Encouraged Spectral Clustering</title>
      <link>/post/2018-gisruk/</link>
      <pubDate>Wed, 04 Apr 2018 02:20:45 +0100</pubDate>
      
      <guid>/post/2018-gisruk/</guid>
      <description>This paper culminates a bit of work I&amp;rsquo;ve started on since seeing a talk by Phil Chodrow on a paper that eventually became his quite interesting NAS paper paper on segregation and entropy surfaces.
I was intrigued by the prospect of using spectral clustering for constrained clustering problems. Specifically, I&amp;rsquo;d known that affinity matrix clustering could be adapted to constrained contexts ever since reading about hierarchical ward clustering, but I hadn&amp;rsquo;t seen a really convincing method that showed me how I could work this out for a general affinity-matrix clustering method.</description>
    </item>
    
  </channel>
</rss>